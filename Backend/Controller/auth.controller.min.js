import User from"../Model/userDetails.model.js";import bcryptjs from"bcryptjs";import jwt from"jsonwebtoken";import{errorHandler}from"../Utils/error.js";const JWT_SECRET="pockeypeperoaj==12i3uppupsaudioahsdjnzpkmcdknhbv210312ie9qwusiadjlncshdbasgdcnahsxjkdsadma";export const register=async(req,res,next)=>{const{uname:uname,email:email,password:password}=req.body,hashPassword=bcryptjs.hashSync(password,10);try{const emailExist=await User.findOne({email:email});if(emailExist)return next(errorHandler(401,"Email Exist"));await User.create({username:uname,email:email,password:hashPassword}),res.send({status:"Account Register"})}catch(error){return next(error)}};export const login=async(req,res,next)=>{const{email:email,password:password}=req.body;try{const user=await User.findOne({email:email});if(!user)return next(errorHandler(401,"No User Found"));if(bcryptjs.compareSync(password,user.password)){const accToken=jwt.sign({id:user._id},JWT_SECRET),{password:password,...rest}=user._doc,expiryDate=new Date(Date.now()+35e3);return res.cookie("access_token",accToken,{httpOnly:!0,expires:expiryDate}).status(200).send(rest)}return next(errorHandler(401,"Invalid Wrong Password"))}catch(error){return next(error)}};export const googleAuth=async(req,res,next)=>{try{const{email:email}=req.body,user=await User.findOne({email:email});if(user){const accToken=jwt.sign({id:user.id},JWT_SECRET),{password:password,...rest}=user._doc,expiryDate=new Date(Date.now()+35e3);return res.cookie("access_token",accToken,{httpOnly:!0,expire:expiryDate}).status(200).send(rest)}return next(errorHandler(401,"No Google Email Found"))}catch(error){return next(errorHandler(401,"Google Auth Failed"))}};